plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.unity'
version = '0.0.1-SNAPSHOT'

def querydslSrcDir = 'build/generated/sources/annotationProcessor/java/main'
ext {
    querydslVersion = '5.0.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'de.huxhorn.sulky:de.huxhorn.sulky.ulid:8.3.0'
}

compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=jakarta.annotation.Generated'
    options.compilerArgs << "-Aquerydsl.suffix="
    options.compilerArgs << "-Aquerydsl.entityAccessors=true"
    options.compilerArgs << '-Xlint:deprecation'
    options.compilerArgs << '-Xlint:unchecked'
}
sourceSets {
    main {
        java {
            srcDirs += [querydslSrcDir]
        }
    }
}
clean {
    delete file(querydslSrcDir)
    delete file('src/main/generated')
}


// checkstyle
/*
checkstyle {
    toolVersion = '10.12.5'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
}
tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}
tasks.named('checkstyleMain') {
    dependsOn tasks.named('compileTestJava')
}
tasks.named('checkstyleTest') {
    dependsOn tasks.named('compileTestJava')
}*/
